let groupsData = [];
let currentGroup = 0;

// –î–∞–Ω–Ω—ã–µ –¥–ª—è fallback (–∫–æ–≥–¥–∞ —Ñ–∞–π–ª –æ—Ç–∫—Ä—ã—Ç –ª–æ–∫–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ file://)
const fallbackData = {
  "groups": [
    {
      "name": "24–ò–°",
      "students": [
        {
          "id": 1,
          "name": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
          "labs": [10, 10, 8, 10, 6, 10, 10, 4, 0, 0]
        },
        {
          "id": 2,
          "name": "–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 10, 8]
        },
        {
          "id": 3,
          "name": "–°–∏–¥–æ—Ä–æ–≤ –ê–ª–µ–∫—Å–µ–π –î–º–∏—Ç—Ä–∏–µ–≤–∏—á",
          "labs": [8, 6, 10, 8, 10, 6, 8, 4, 0, 0]
        },
        {
          "id": 4,
          "name": "–ö–æ–∑–ª–æ–≤–∞ –ê–Ω–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 6, 0]
        },
        {
          "id": 5,
          "name": "–ú–æ—Ä–æ–∑–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–Ω–¥—Ä–µ–µ–≤–∏—á",
          "labs": [6, 8, 6, 4, 8, 6, 0, 0, 0, 0]
        }
      ]
    },
    {
      "name": "24–ò–í",
      "students": [
        {
          "id": 6,
          "name": "–°–º–∏—Ä–Ω–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ò–≥–æ—Ä–µ–≤–Ω–∞",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
        },
        {
          "id": 7,
          "name": "–ù–æ–≤–∏–∫–æ–≤ –ü–∞–≤–µ–ª –û–ª–µ–≥–æ–≤–∏—á",
          "labs": [10, 8, 10, 10, 8, 10, 6, 4, 0, 0]
        },
        {
          "id": 8,
          "name": "–í–æ–ª–∫–æ–≤–∞ –û–ª—å–≥–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞",
          "labs": [8, 10, 8, 10, 10, 8, 10, 8, 6, 0]
        },
        {
          "id": 9,
          "name": "–°–æ–∫–æ–ª–æ–≤ –ê—Ä—Ç—ë–º –í–∞—Å–∏–ª—å–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 10, 8, 0, 0]
        },
        {
          "id": 10,
          "name": "–õ–µ–±–µ–¥–µ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞",
          "labs": [6, 8, 6, 8, 6, 4, 6, 0, 0, 0]
        }
      ]
    },
    {
      "name": "24–ü–ò",
      "students": [
        {
          "id": 11,
          "name": "–§–µ–¥–æ—Ä–æ–≤ –ú–∞–∫—Å–∏–º –ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 10, 6]
        },
        {
          "id": 12,
          "name": "–ï–≥–æ—Ä–æ–≤–∞ –°–æ—Ñ–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
          "labs": [8, 10, 8, 6, 10, 8, 6, 4, 0, 0]
        },
        {
          "id": 13,
          "name": "–ü–∞–≤–ª–æ–≤ –ö–∏—Ä–∏–ª–ª –°–µ—Ä–≥–µ–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 8, 0]
        },
        {
          "id": 14,
          "name": "–†–æ–º–∞–Ω–æ–≤–∞ –î–∞—Ä—å—è –ò–≥–æ—Ä–µ–≤–Ω–∞",
          "labs": [6, 6, 8, 6, 4, 6, 4, 0, 0, 0]
        },
        {
          "id": 15,
          "name": "–í–∞—Å–∏–ª—å–µ–≤ –ù–∏–∫–∏—Ç–∞ –î–º–∏—Ç—Ä–∏–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 8, 6, 4, 0]
        }
      ]
    }
  ]
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON (—Å fallback –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã)
async function loadData() {
    try {
        const response = await fetch('data/students.json');
        const data = await response.json();
        groupsData = data.groups;
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞');
    } catch (error) {
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ CORS (–ª–æ–∫–∞–ª—å–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞), –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        console.log('üí° –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º JSON –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä');
        groupsData = fallbackData.groups;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    initTabs();
    displayStudents(currentGroup);
}

// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
function getProgressColor(percentage) {
    if (percentage >= 80) {
        return '#10b981'; // –ó–µ–ª—ë–Ω—ã–π –¥–ª—è –∞–≤—Ç–æ–∑–∞—á—ë—Ç–∞
    } else if (percentage >= 60) {
        return '#f59e0b'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π
    } else if (percentage >= 40) {
        return '#ef4444'; // –ö—Ä–∞—Å–Ω—ã–π
    } else if (percentage >= 20) {
        return '#dc2626'; // –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
    } else {
        return '#991b1b'; // –û—á–µ–Ω—å —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
function displayStudents(groupIndex) {
    const container = document.getElementById('students-container');
    const group = groupsData[groupIndex];
    
    if (!group) {
        container.innerHTML = '<p style="color: white; text-align: center;">–ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>';
        return;
    }

    container.innerHTML = '';

    group.students.forEach(student => {
        const totalScore = student.labs.reduce((sum, score) => sum + score, 0);
        const percentage = totalScore; // –ò–∑ 100 –±–∞–ª–ª–æ–≤
        const completedLabs = student.labs.filter(score => score > 0).length;
        const allLabsCompleted = student.labs.every(score => score > 0);
        
        const studentCard = document.createElement('div');
        studentCard.className = 'student-card';
        
        const progressColor = getProgressColor(percentage);
        
        studentCard.innerHTML = `
            <div class="student-header">
                <div class="student-name">${student.name}</div>
                <div class="student-score">
                    <span class="score-value" style="color: ${progressColor}">${totalScore}/100</span>
                    ${percentage >= 80 && allLabsCompleted ? '<span class="auto-pass">–ê–≤—Ç–æ–∑–∞—á—ë—Ç</span>' : ''}
                </div>
            </div>
            
            <div class="progress-container">
                <div class="progress-bar-wrapper">
                    <div class="progress-bar" style="width: ${percentage}%; background-color: ${progressColor}">
                        ${percentage}%
                    </div>
                </div>
            </div>
            
            <div class="labs-title">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã (${completedLabs}/10)</div>
            <div class="labs-grid">
                ${student.labs.map((score, index) => {
                    let labClass = 'empty';
                    if (score === 10) {
                        labClass = 'complete';
                    } else if (score > 0) {
                        labClass = 'partial';
                    }
                    
                    return `
                        <div class="lab-item ${labClass}">
                            <div class="lab-number">–õ–† ${index + 1}</div>
                            <div class="lab-score">${score}/10</div>
                        </div>
                    `;
                }).join('')}
            </div>
        `;
        
        container.appendChild(studentCard);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
function initTabs() {
    const tabButtons = document.querySelectorAll('.tab-button');
    
    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            tabButtons.forEach(btn => btn.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
            button.classList.add('active');
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –≥—Ä—É–ø–ø—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
            currentGroup = parseInt(button.dataset.group);
            displayStudents(currentGroup);
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    loadData();
});

