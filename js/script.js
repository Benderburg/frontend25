let groupsData = [];
let currentGroup = 0;
let viewMode = 'students'; // 'students' –∏–ª–∏ 'labs'

// –î–∞–Ω–Ω—ã–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç
const labsData = [
    {
        number: 1,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ1",
        description: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ HTML –∏ CSS. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã.",
        available: true,
        downloadUrl: "files/lab1.pdf" // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL —Ñ–∞–π–ª–∞
    },
    {
        number: 2,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ2",
        description: "–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –≤—ë—Ä—Å—Ç–∫–∞, Flex/Grid, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –º–µ–¥–∏–∞–∑–∞–ø—Ä–æ—Å–∞–º–∏.",
        available: true,
        downloadUrl: "files/lab2.pdf"
    },
    {
        number: 3,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3",
        description: "CSS-–ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã: LESS –∏ SASS",
        available: true,
        downloadUrl: "files/lab3.pdf"
    },
    {
        number: 4,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ4",
        description: "CSS-–±–∏–±–ª–∏–æ—Ç–µ–∫–∏: Bootstrap & Tailwind",
        available: true,
        downloadUrl: "files/lab4.pdf"
    },
    {
        number: 5,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ5",
        description: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ JavaScript",
        available: true,
        downloadUrl: "files/lab5.pdf"
    },
    {
        number: 6,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ6",
        description: "DOM –∏ —Å–æ–±—ã—Ç–∏—è",
        available: false
    },
    {
        number: 7,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ7",
        description: "jQuery: –∑–∞—á–µ–º –∏ –ø–æ—á–µ–º—É –º–µ–Ω—å—à–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ",
        available: false
    },
    {
        number: 8,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ8",
        description: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ React + JSX",
        available: false
    },
    {
        number: 9,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ9",
        description: "–†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ (API + React Hooks)",
        available: false
    },
    {
        number: 10,
        title: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ10",
        description: "–ú–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç: ¬´AI-powered –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ¬ª",
        available: false
    }
];

// –î–∞–Ω–Ω—ã–µ –¥–ª—è fallback (–∫–æ–≥–¥–∞ —Ñ–∞–π–ª –æ—Ç–∫—Ä—ã—Ç –ª–æ–∫–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ file://)
const fallbackData = {
  "groups": [
    {
      "name": "24–ò–°",
      "students": [
        {
          "id": 1,
          "name": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
          "labs": [10, 10, 8, 10, 6, 10, 10, 4, 0, 0]
        },
        {
          "id": 2,
          "name": "–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 10, 8]
        },
        {
          "id": 3,
          "name": "–°–∏–¥–æ—Ä–æ–≤ –ê–ª–µ–∫—Å–µ–π –î–º–∏—Ç—Ä–∏–µ–≤–∏—á",
          "labs": [8, 6, 10, 8, 10, 6, 8, 4, 0, 0]
        },
        {
          "id": 4,
          "name": "–ö–æ–∑–ª–æ–≤–∞ –ê–Ω–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 6, 0]
        },
        {
          "id": 5,
          "name": "–ú–æ—Ä–æ–∑–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–Ω–¥—Ä–µ–µ–≤–∏—á",
          "labs": [6, 8, 6, 4, 8, 6, 0, 0, 0, 0]
        }
      ]
    },
    {
      "name": "24–ò–í",
      "students": [
        {
          "id": 6,
          "name": "–°–º–∏—Ä–Ω–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ò–≥–æ—Ä–µ–≤–Ω–∞",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
        },
        {
          "id": 7,
          "name": "–ù–æ–≤–∏–∫–æ–≤ –ü–∞–≤–µ–ª –û–ª–µ–≥–æ–≤–∏—á",
          "labs": [10, 8, 10, 10, 8, 10, 6, 4, 0, 0]
        },
        {
          "id": 8,
          "name": "–í–æ–ª–∫–æ–≤–∞ –û–ª—å–≥–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞",
          "labs": [8, 10, 8, 10, 10, 8, 10, 8, 6, 0]
        },
        {
          "id": 9,
          "name": "–°–æ–∫–æ–ª–æ–≤ –ê—Ä—Ç—ë–º –í–∞—Å–∏–ª—å–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 10, 8, 0, 0]
        },
        {
          "id": 10,
          "name": "–õ–µ–±–µ–¥–µ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞",
          "labs": [6, 8, 6, 8, 6, 4, 6, 0, 0, 0]
        }
      ]
    },
    {
      "name": "24–ü–ò",
      "students": [
        {
          "id": 11,
          "name": "–§–µ–¥–æ—Ä–æ–≤ –ú–∞–∫—Å–∏–º –ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 10, 6]
        },
        {
          "id": 12,
          "name": "–ï–≥–æ—Ä–æ–≤–∞ –°–æ—Ñ–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
          "labs": [8, 10, 8, 6, 10, 8, 6, 4, 0, 0]
        },
        {
          "id": 13,
          "name": "–ü–∞–≤–ª–æ–≤ –ö–∏—Ä–∏–ª–ª –°–µ—Ä–≥–µ–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 10, 10, 8, 0]
        },
        {
          "id": 14,
          "name": "–†–æ–º–∞–Ω–æ–≤–∞ –î–∞—Ä—å—è –ò–≥–æ—Ä–µ–≤–Ω–∞",
          "labs": [6, 6, 8, 6, 4, 6, 4, 0, 0, 0]
        },
        {
          "id": 15,
          "name": "–í–∞—Å–∏–ª—å–µ–≤ –ù–∏–∫–∏—Ç–∞ –î–º–∏—Ç—Ä–∏–µ–≤–∏—á",
          "labs": [10, 10, 10, 10, 10, 10, 8, 6, 4, 0]
        }
      ]
    }
  ]
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON (—Å fallback –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã)
async function loadData() {
    try {
        const response = await fetch('data/students.json');
        const data = await response.json();
        groupsData = data.groups;
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞');
    } catch (error) {
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ CORS (–ª–æ–∫–∞–ª—å–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞), –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        console.log('üí° –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º JSON –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä');
        groupsData = fallbackData.groups;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    initTabs();
    displayStudents(currentGroup);
}

// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
function getProgressColor(percentage) {
    if (percentage >= 80) {
        return '#10b981'; // –ó–µ–ª—ë–Ω—ã–π –¥–ª—è –∞–≤—Ç–æ–∑–∞—á—ë—Ç–∞
    } else if (percentage >= 60) {
        return '#f59e0b'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π
    } else if (percentage >= 40) {
        return '#ef4444'; // –ö—Ä–∞—Å–Ω—ã–π
    } else if (percentage >= 20) {
        return '#dc2626'; // –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
    } else {
        return '#991b1b'; // –û—á–µ–Ω—å —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
function displayStudents(groupIndex) {
    const container = document.getElementById('students-container');
    const group = groupsData[groupIndex];
    
    if (!group) {
        container.innerHTML = '<p style="color: white; text-align: center;">–ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>';
        return;
    }

    container.innerHTML = '';

    group.students.forEach(student => {
        const totalScore = student.labs.reduce((sum, score) => sum + score, 0);
        const percentage = totalScore; // –ò–∑ 100 –±–∞–ª–ª–æ–≤
        const completedLabs = student.labs.filter(score => score > 0).length;
        const allLabsCompleted = student.labs.every(score => score > 0);
        
        const studentCard = document.createElement('div');
        studentCard.className = 'student-card';
        
        const progressColor = getProgressColor(percentage);
        
        studentCard.innerHTML = `
            <div class="student-header">
                <div class="student-name">${student.name}</div>
                <div class="student-score">
                    <span class="score-value" style="color: ${progressColor}">${totalScore}/100</span>
                    ${percentage >= 80 && allLabsCompleted ? '<span class="auto-pass">–ê–≤—Ç–æ–∑–∞—á—ë—Ç</span>' : ''}
                </div>
            </div>
            
            <div class="progress-container">
                <div class="progress-bar-wrapper">
                    <div class="progress-bar" style="width: ${percentage}%; background-color: ${progressColor}">
                        ${percentage}%
                    </div>
                </div>
            </div>
            
            <div class="labs-title">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã (${completedLabs}/10)</div>
            <div class="labs-grid">
                ${student.labs.map((score, index) => {
                    let labClass = 'empty';
                    if (score === 10) {
                        labClass = 'complete';
                    } else if (score > 0) {
                        labClass = 'partial';
                    }
                    
                    return `
                        <div class="lab-item ${labClass}">
                            <div class="lab-number">–õ–† ${index + 1}</div>
                            <div class="lab-score">${score}/10</div>
                        </div>
                    `;
                }).join('')}
            </div>
        `;
        
        container.appendChild(studentCard);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
function initTabs() {
    const tabButtons = document.querySelectorAll('.tab-button');
    
    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            tabButtons.forEach(btn => btn.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
            button.classList.add('active');
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –≥—Ä—É–ø–ø—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
            currentGroup = parseInt(button.dataset.group);
            displayStudents(currentGroup);
        });
    });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç
function displayLabs() {
    viewMode = 'labs';
    const container = document.getElementById('students-container');
    const tabsContainer = document.querySelector('.tabs');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –≥—Ä—É–ø–ø
    tabsContainer.style.display = 'none';
    
    container.innerHTML = '<button class="back-button" id="backButton">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç—É–¥–µ–Ω—Ç–∞–º</button>';
    
    const labsContainer = document.createElement('div');
    labsContainer.id = 'labs-container';
    
    labsData.forEach(lab => {
        const labCard = document.createElement('div');
        labCard.className = `lab-card ${lab.available ? 'active' : 'inactive'}`;
        
        labCard.innerHTML = `
            <div class="lab-header">
                <div class="lab-number-badge">–õ–† ${lab.number}</div>
                <div class="lab-status ${lab.available ? 'available' : 'in-development'}">
                    ${lab.available ? '–î–æ—Å—Ç—É–ø–Ω–∞' : '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'}
                </div>
            </div>
            <div class="lab-title">${lab.title}</div>
            <div class="lab-description">${lab.description}</div>
            <button class="lab-download-btn ${lab.available ? 'active' : 'inactive'}" 
                    ${lab.available ? '' : 'disabled'}
                    data-url="${lab.downloadUrl || ''}">
                ${lab.available ? 'üì• –°–∫–∞—á–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ' : 'üîí –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'}
            </button>
        `;
        
        labsContainer.appendChild(labCard);
    });
    
    container.appendChild(labsContainer);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    document.getElementById('backButton').addEventListener('click', () => {
        viewMode = 'students';
        tabsContainer.style.display = 'flex';
        displayStudents(currentGroup);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    document.querySelectorAll('.lab-download-btn.active').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const url = e.target.dataset.url;
            if (url && url !== '#') {
                window.location.href = url;
            } else {
                alert('–§–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–∑–∂–µ');
            }
        });
    });
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
function initModal() {
    const modal = document.getElementById('rulesModal');
    const rulesButton = document.getElementById('rulesButton');
    const closeButton = document.getElementById('closeModal');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    rulesButton.addEventListener('click', () => {
        modal.classList.add('show');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
    closeButton.addEventListener('click', () => {
        modal.classList.remove('show');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('show');
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Escape
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal.classList.contains('show')) {
            modal.classList.remove('show');
        }
    });
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –º–µ–∂–¥—É —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–º–∏
function initLabsCard() {
    const labsCard = document.getElementById('labsCard');
    
    labsCard.addEventListener('click', () => {
        displayLabs();
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    loadData();
    initModal();
    initLabsCard();
});

